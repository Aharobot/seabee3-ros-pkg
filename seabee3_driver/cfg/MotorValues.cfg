#! /usr/bin/env python

PACKAGE='seabee3_driver'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#Name            Type   Reconfiguration level             Description         Default Min Max
gen.add( "fwd_right_thruster",     int_t,  SensorLevels.RECONFIGURE_RUNNING, "direction of this thruster", 0, -100, 100 )
gen.add( "fwd_left_thruster",      int_t,  SensorLevels.RECONFIGURE_RUNNING, "direction of this thruster", 0, -100, 100 )
gen.add( "depth_front_thruster",   int_t,  SensorLevels.RECONFIGURE_RUNNING, "direction of this thruster", 0, -100, 100 )
gen.add( "depth_back_thruster",    int_t,  SensorLevels.RECONFIGURE_RUNNING, "direction of this thruster", 0, -100, 100 )
gen.add( "strafe_top_thruster",    int_t,  SensorLevels.RECONFIGURE_RUNNING, "direction of this thruster", 0, -100, 100 )
gen.add( "strafe_bottom_thruster", int_t,  SensorLevels.RECONFIGURE_RUNNING, "direction of this thruster", 0, -100, 100 )

gen.add( "slot_7",                     int_t,  SensorLevels.RECONFIGURE_RUNNING, "direction of this thruster", 0, -100, 100 )
gen.add( "slot_8",                     int_t,  SensorLevels.RECONFIGURE_RUNNING, "direction of this thruster", 0, -100, 100 )
gen.add( "slot_9",                     int_t,  SensorLevels.RECONFIGURE_RUNNING, "direction of this thruster", 0, -100, 100 )

gen.add( "apply",                      bool_t, SensorLevels.RECONFIGURE_RUNNING, "publish motor value state", False )

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "MotorValues"))
