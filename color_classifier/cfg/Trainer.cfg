#! /usr/bin/env python

PACKAGE='color_classifier'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

colors = gen.enum([gen.const("Red", int_t, 0, 0),
                     gen.const("Orange", int_t, 1, 0),
                     gen.const("Yellow", int_t, 2, 0),
                     gen.const("Green", int_t, 3, 0),
                     gen.const("Blue", int_t, 4, 0),
                     gen.const("Black", int_t, 5, 0),
                     gen.const("White", int_t, 6, 0),
                     gen.const("Unknown", int_t, 7, 0)],
                    "Current color")

gen.add("training_color", int_t, SensorLevels.RECONFIGURE_RUNNING,
        "Current training color", 0,
        edit_method = colors)
        
gen.add("train_ann", bool_t, SensorLevels.RECONFIGURE_RUNNING,
        "Train the neural net on the accumulated training data", False)

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "Trainer"))

