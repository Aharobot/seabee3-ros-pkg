#! /usr/bin/env python

PACKAGE='tritech_micron'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#Name            Type   Reconfiguration level             Description         Default Min Max
gen.add( "use_laser_threshold", bool_t, SensorLevels.RECONFIGURE_RUNNING, "enable thresholding of intensity bins for laser scan conversion", False )
gen.add( "min_laser_intensity_threshold", int_t, SensorLevels.RECONFIGURE_RUNNING, "min intensity for thresholding when converting to laser scan", 127, 0, 255 )

gen.add( "use_point_cloud_threshold", bool_t, SensorLevels.RECONFIGURE_RUNNING, "enable thresholding of intensity bins for point cloud conversion", False )
gen.add( "min_point_cloud_intensity_threshold", int_t, SensorLevels.RECONFIGURE_RUNNING, "min intensity for thresholding when converting to point cloud", 127, 0, 255 )

gen.add( "min_distance_threshold", double_t, SensorLevels.RECONFIGURE_RUNNING, "ignore points closer than this threshold", 0.25, 0.0, 20 )

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "ScanLineConverter"))