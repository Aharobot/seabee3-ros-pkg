#! /usr/bin/env python

PACKAGE='tritech_micron_driver'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#Name            Type   Reconfiguration level             Description         Default Min Max
gen.add( "num_bins", int_t, SensorLevels.RECONFIGURE_RUNNING, "number of bins", 50, 0, 500 )
gen.add( "bin_distance_step", double_t, SensorLevels.RECONFIGURE_RUNNING, "distance between each bin (m)", 0.05, 0.0, 1.0 )
gen.add( "distance", double_t, SensorLevels.RECONFIGURE_RUNNING, "simulate an object at this distance", 1.0, 0.0, 10.0 )
gen.add( "intensity", int_t, SensorLevels.RECONFIGURE_RUNNING, "simulate this intensity", 255, 0, 255 )
gen.add( "intensity_variance", double_t, SensorLevels.RECONFIGURE_RUNNING, "simulate this variance in intensity", 0.1, 0.0, 10.0 );
gen.add( "use_manual_angle", bool_t, SensorLevels.RECONFIGURE_RUNNING, "switch between manual angle and velocity", False )
gen.add( "manual_angle", double_t, SensorLevels.RECONFIGURE_RUNNING, "angle at which to place the head", 0.0, -180.0, 180.0 )
gen.add( "scan_angle_velocity", double_t, SensorLevels.RECONFIGURE_RUNNING, "angular velocity of the head (deg/sec)", 15.0, -180.0, 180.0 )

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "TritechMicron"))
