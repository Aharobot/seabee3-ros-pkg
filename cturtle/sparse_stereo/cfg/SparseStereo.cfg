#! /usr/bin/env python

PACKAGE='sparse_stereo'
import roslib; roslib.load_manifest(PACKAGE)

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#Name            Type   Reconfiguration level             Description         Default Min Max

gen.add("search_window_height", int_t, SensorLevels.RECONFIGURE_RUNNING,"Search window height", 5, 0, 20)
gen.add("search_window_width_percent", double_t, SensorLevels.RECONFIGURE_RUNNING,"Search window width (percent of left image width)", 20.0, 0.0, 100.0)
gen.add("num_pyramid_levels", int_t, SensorLevels.RECONFIGURE_RUNNING,"Number of pyramid levels", 4, 0, 5)
gen.add("num_corners_to_track", int_t, SensorLevels.RECONFIGURE_RUNNING,"Number of corners to track", 30, 0, 200)
gen.add("max_feature_error_threshold", double_t, SensorLevels.RECONFIGURE_RUNNING,"Maximum acceptable error in features", 1500.0, 0.0, 5000.0)
gen.add("min_feature_distance", double_t, SensorLevels.RECONFIGURE_RUNNING,"Minimum acceptable distance between features", 0.5, 0.0, 10.0)
gen.add("min_matched_feature_distance", double_t, SensorLevels.RECONFIGURE_RUNNING,"Minimum acceptable distance between matched features", 2.0, 0.0, 100.0)
gen.add("max_matched_feature_distance", double_t, SensorLevels.RECONFIGURE_RUNNING,"Maximum acceptable distance between matched features", 30.0, 0.0, 300.0)
gen.add("block_size", int_t, SensorLevels.RECONFIGURE_RUNNING,"Number of blocks to use for features", 1, 0, 5)
gen.add("enable_harris_corners", bool_t, SensorLevels.RECONFIGURE_RUNNING,"Whether to use Harris corners", False)
gen.add("enable_corner_sub_pix", bool_t, SensorLevels.RECONFIGURE_RUNNING,"Whether to use sub-pixel accuracy when finding corners", True)
gen.add("find_good_features_quality_level", double_t, SensorLevels.RECONFIGURE_RUNNING,"Quality to use for finding features", 0.005, 0.0, 0.1)
gen.add("find_good_features_k", double_t, SensorLevels.RECONFIGURE_RUNNING,"K-value to use for finding features", 0.04, 0.0, 1.0)
gen.add("flow_max_iterations", int_t, SensorLevels.RECONFIGURE_RUNNING,"Maximum number of iterations to use for optical flow", 5, 0, 20)
gen.add("flow_min_epsilon", double_t, SensorLevels.RECONFIGURE_RUNNING,"Minimum epsilon value to use for optical flow", 0.5, 0.0, 1.0)
gen.add("sub_pix_max_iterations", int_t, SensorLevels.RECONFIGURE_RUNNING,"Maximum number of iterations to use for sub_pix", 5, 0, 20)
gen.add("sub_pix_min_epsilon", double_t, SensorLevels.RECONFIGURE_RUNNING,"Minimum epsilon value to use for sub_pix", 0.5, 0.0, 1.0)

exit(gen.generate(PACKAGE, "sparse_stereo", "SparseStereo"))
