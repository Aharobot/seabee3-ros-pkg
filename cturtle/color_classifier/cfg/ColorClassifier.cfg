#! /usr/bin/env python

PACKAGE='color_classifier'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#Name            Type   Reconfiguration level             Description         Default Min Max
gen.add( "red_hue",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "red hue mean", 255, 0, 255 )
gen.add( "red_sat",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "red sat mean", 255, 0, 255 )
gen.add( "red_val",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "red val mean", 255, 0, 255 )
gen.add( "red_hue_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "red hue mean dist thresh", 0, 0.0, 255 )
gen.add( "red_sat_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "red sat mean dist thresh", 0, 0.0, 255 )
gen.add( "red_val_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "red val mean dist thresh", 0, 0.0, 255 )
gen.add( "red_filter_enabled", bool_t, SensorLevels.RECONFIGURE_RUNNING, "enable red filter", True)

gen.add( "orange_hue",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "orange hue mean", 255, 0, 255 )
gen.add( "orange_sat",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "orange sat mean", 255, 0, 255 )
gen.add( "orange_val",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "orange val mean", 255, 0, 255 )
gen.add( "orange_hue_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "orange hue mean dist thresh", 0, 0.0, 255 )
gen.add( "orange_sat_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "orange sat mean dist thresh", 0, 0.0, 255 )
gen.add( "orange_val_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "orange val mean dist thresh", 0, 0.0, 255 )
gen.add( "orange_filter_enabled", bool_t, SensorLevels.RECONFIGURE_RUNNING, "enable orange filter", True)

gen.add( "yellow_hue",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "yellow hue mean", 255, 0, 255 )
gen.add( "yellow_sat",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "yellow sat mean", 255, 0, 255 )
gen.add( "yellow_val",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "yellow val mean", 255, 0, 255 )
gen.add( "yellow_hue_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "yellow hue mean dist thresh", 0, 0.0, 255 )
gen.add( "yellow_sat_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "yellow sat mean dist thresh", 0, 0.0, 255 )
gen.add( "yellow_val_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "yellow val mean dist thresh", 0, 0.0, 255 )
gen.add( "yellow_filter_enabled", bool_t, SensorLevels.RECONFIGURE_RUNNING, "enable yellow filter", True)

gen.add( "green_hue",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "green hue mean", 255, 0, 255 )
gen.add( "green_sat",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "green sat mean", 255, 0, 255 )
gen.add( "green_val",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "green val mean", 255, 0, 255 )
gen.add( "green_hue_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "green hue mean dist thresh", 0, 0.0, 255 )
gen.add( "green_sat_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "green sat mean dist thresh", 0, 0.0, 255 )
gen.add( "green_val_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "green val mean dist thresh", 0, 0.0, 255 )
gen.add( "green_filter_enabled", bool_t, SensorLevels.RECONFIGURE_RUNNING, "enable green filter", True)

gen.add( "blue_hue",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "blue hue mean", 255, 0, 255 )
gen.add( "blue_sat",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "blue sat mean", 255, 0, 255 )
gen.add( "blue_val",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "blue val mean", 255, 0, 255 )
gen.add( "blue_hue_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "blue hue mean dist thresh", 0, 0.0, 255 )
gen.add( "blue_sat_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "blue sat mean dist thresh", 0, 0.0, 255 )
gen.add( "blue_val_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "blue val mean dist thresh", 0, 0.0, 255 )
gen.add( "blue_filter_enabled", bool_t, SensorLevels.RECONFIGURE_RUNNING, "enable blue filter", True)

gen.add( "black_hue",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "black hue mean", 255, 0, 255 )
gen.add( "black_sat",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "black sat mean", 255, 0, 255 )
gen.add( "black_val",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "black val mean", 255, 0, 255 )
gen.add( "black_hue_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "black hue mean dist thresh", 0, 0.0, 255 )
gen.add( "black_sat_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "black sat mean dist thresh", 0, 0.0, 255 )
gen.add( "black_val_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "black val mean dist thresh", 0, 0.0, 255 )
gen.add( "black_filter_enabled", bool_t, SensorLevels.RECONFIGURE_RUNNING, "enable black filter", True)

gen.add( "white_hue",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "white hue mean", 255, 0, 255 )
gen.add( "white_sat",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "white sat mean", 255, 0, 255 )
gen.add( "white_val",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "white val mean", 255, 0, 255 )
gen.add( "white_hue_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "white hue mean dist thresh", 0, 0.0, 255 )
gen.add( "white_sat_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "white sat mean dist thresh", 0, 0.0, 255 )
gen.add( "white_val_dist_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "white val mean dist thresh", 0, 0.0, 255 )
gen.add( "white_filter_enabled", bool_t, SensorLevels.RECONFIGURE_RUNNING, "enable white filter", True)

gen.add( "ms_spatial_radius", double_t, SensorLevels.RECONFIGURE_RUNNING,"MS spatial-radius", 20.0, 0.0, 100.0)
gen.add( "ms_color_ratius", double_t, SensorLevels.RECONFIGURE_RUNNING,"MS color-radius", 40.0, 0.0, 100.0)
gen.add( "ms_max_level", int_t, SensorLevels.RECONFIGURE_RUNNING,"MS max level", 2, 0, 4)
gen.add( "ms_max_iter", int_t, SensorLevels.RECONFIGURE_RUNNING,"MS max iter", 3, 0, 10)
gen.add( "ms_min_epsilon", double_t, SensorLevels.RECONFIGURE_RUNNING,"MS min epsilon", 1.0, 0.0, 100.0)

gen.add( "enable_meanshift", bool_t, SensorLevels.RECONFIGURE_RUNNING,"enable meanshift", True)
gen.add( "enable_thresholding", bool_t, SensorLevels.RECONFIGURE_RUNNING,"enable_thresholding", True)

gen.add( "color_distance_max", double_t, SensorLevels.RECONFIGURE_RUNNING, "max distance in color space before color is considered unknown", 25.0, 0.0, 500.0 )

gen.add( "threshold_value", double_t, SensorLevels.RECONFIGURE_RUNNING, "threshold value", 0.0, 0.0, 1000.0 )
gen.add( "threshold_max_value", double_t, SensorLevels.RECONFIGURE_RUNNING, "threshold_max_value", 0.0, 0.0, 1000.0 )

threshold_types = gen.enum([gen.const("binary",     int_t, 0, "Binary Threshold"),
                            gen.const("binary_inv", int_t, 1, "Inverted Binary Threshold"),
                            gen.const("trunc",      int_t, 2, "Truncate"),
                            gen.const("tozero",     int_t, 3, "Threshold to zero if too high"),
                            gen.const("tozero_inv", int_t, 4, "Threshold to zero if too low")],
                           "Threshold Types")

gen.add("threshold_type", int_t, SensorLevels.RECONFIGURE_CLOSE,
        "type of thresholding operation", 1, 0, 4,
        edit_method = threshold_types)

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "ColorClassifier"))

