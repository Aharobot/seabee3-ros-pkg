#! /usr/bin/env python

PACKAGE='color_classifier'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#Name            Type   Reconfiguration level             Description         Default Min Max
#gen.add("red_h_min", double_t, SensorLevels.RECONFIGURE_RUNNING,"red hue min", 345.0, 0.0, 360.0)
#gen.add("red_h_max", double_t, SensorLevels.RECONFIGURE_RUNNING,"red hue max", 15.0, 0.0, 360.0)
#gen.add("orange_h_min", double_t, SensorLevels.RECONFIGURE_RUNNING,"orange hue min", 15.0, 0.0, 360.0)
#gen.add("orange_h_max", double_t, SensorLevels.RECONFIGURE_RUNNING,"orange hue max", 45.0, 0.0, 360.0)
#gen.add("yellow_h_min", double_t, SensorLevels.RECONFIGURE_RUNNING,"yellow hue min", 45.0, 0.0, 360.0)
#gen.add("yellow_h_max", double_t, SensorLevels.RECONFIGURE_RUNNING,"yellow hue max", 67.0, 0.0, 360.0)
#gen.add("green_h_min", double_t, SensorLevels.RECONFIGURE_RUNNING,"green hue min", 67.0, 0.0, 360.0)
#gen.add("green_h_max", double_t, SensorLevels.RECONFIGURE_RUNNING,"green hue max", 165.0, 0.0, 360.0)
#gen.add("blue_h_min", double_t, SensorLevels.RECONFIGURE_RUNNING,"blue hue min", 156.0, 0.0, 360.0)
#gen.add("blue_h_max", double_t, SensorLevels.RECONFIGURE_RUNNING,"blue hue max", 285.0, 0.0, 360.0)

gen.add("red_h_c", double_t, SensorLevels.RECONFIGURE_RUNNING,"red hue center", 356.4, 0.0, 360.0)
gen.add("red_h_r", double_t, SensorLevels.RECONFIGURE_RUNNING,"red hue radius", 21.6, 0.0, 180.0)
gen.add("orange_h_c", double_t, SensorLevels.RECONFIGURE_RUNNING,"orange hue center", 25.2, 0.0, 360.0)
gen.add("orange_h_r", double_t, SensorLevels.RECONFIGURE_RUNNING,"orange hue radius", 7.2, 0.0, 180.0)
gen.add("yellow_h_c", double_t, SensorLevels.RECONFIGURE_RUNNING,"yellow hue center", 108.0, 0.0, 360.0)
gen.add("yellow_h_r", double_t, SensorLevels.RECONFIGURE_RUNNING,"yellow hue radius", 1.0, 0.0, 180.0)
gen.add("green_h_c", double_t, SensorLevels.RECONFIGURE_RUNNING,"green hue center", 54.0, 0.0, 360.0)
gen.add("green_h_r", double_t, SensorLevels.RECONFIGURE_RUNNING,"green hue radius", 10.8, 0.0, 180.0)
gen.add("blue_h_c", double_t, SensorLevels.RECONFIGURE_RUNNING,"blue hue center", 151.2, 0.0, 360.0)
gen.add("blue_h_r", double_t, SensorLevels.RECONFIGURE_RUNNING,"blue hue radius", 12.6, 0.0, 180.0)

# any color with a value less than this is considered black
gen.add("black_v_threshold", double_t, SensorLevels.RECONFIGURE_RUNNING,"black v threshold", 4.0, 0.0, 100.0)

# any color with a combined value-saturation ( v * ( 1-s ) ) greater than this is considered white
gen.add("white_combined_sv_threshold", double_t, SensorLevels.RECONFIGURE_RUNNING,"white combined s-v threshold", 72.0, 0.0, 100.0)

# any color with a combined value-saturation ( v * s ) less than this is considered black
gen.add("black_combined_sv_threshold", double_t, SensorLevels.RECONFIGURE_RUNNING,"white combined s-v threshold", 0.0, 0.0, 100.0)

exit(gen.generate(PACKAGE, "dynamic_maxeconfigure_node", "ColorClassifier"))
